{"version":3,"file":"static/js/529.b346aee1.chunk.js","mappings":"oQAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EACtBC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAV,EACpBC,EAAkB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,SAAnB,EACvBC,EAAwB,SAAAN,GAAK,OACxCA,EAAMC,SAASK,qBADyB,EAmB7BC,GAAkCC,EAAAA,EAAAA,IAC7C,CAACT,EAAgBG,IACjB,SAACD,EAAUE,GACT,IAAIM,EAAWR,EAASS,MACxB,GAAe,KAAXP,EAAe,CACjB,IAAMQ,EAAmBR,EAAOS,cAChCH,EAAWA,EAASN,QAAO,SAAAU,GAAO,OAChCA,EAAQC,KAAKF,cAAcG,SAASJ,EADJ,GAGnC,CACD,OAAO,OAAIF,GAAUO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,KAAKK,cAAcD,EAAEJ,KAAjC,GAC3B,IClCH,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAA8P,mC,UCA9P,EAAiC,sCAAjC,EAA+E,6B,UCIlEM,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBACEC,SARqB,SAAAC,GACzB,IAAMC,EAASD,EAAMC,OAAOC,MAAMC,OAClCR,GAASS,EAAAA,EAAAA,GAAUH,GACpB,EAMKI,KAAK,OACLC,YAAY,iBACZlB,KAAK,OACLS,UAAWC,KAEb,gBACES,KAAK,UACLC,MAAM,OACNC,OAAO,OACPC,QAAQ,gBACRC,MAAM,6BALR,UAOE,iBACEC,EAAE,+aACFC,SAAS,gBAKlB,E,oBCvBYC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAO3B,EAAP,KAAa4B,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACMvB,GAAWC,EAAAA,EAAAA,MAETZ,GAAUmC,EAAAA,EAAAA,IAAY9C,GAAtBW,MACFL,GAAYwC,EAAAA,EAAAA,IAAYvC,GAExBwC,EAAe,SAAAC,GACnB,MAAwBA,EAAEpB,OAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACL,SAATd,EAAkB4B,EAAQd,GAASgB,EAAUhB,EAC9C,EAwBKoB,EAAQ,WACZN,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMrB,UAAWC,EAAUyB,SA5BR,SAAAC,GACnBA,EAAIC,iBAEJ,IAAMC,EAAa,CACjBtC,KAAAA,EACA6B,OAAAA,GAEIU,EAAiBD,EAAWtC,KAAKF,cAMvC,GALyBF,EAAM4C,MAC7B,SAAAzC,GAAO,OACLA,EAAQC,KAAKF,gBAAkByC,GAC/BxC,EAAQ8B,SAAWS,EAAWT,MAFzB,IAKP,OAAOY,EAAAA,GAAAA,MAAA,UAAeH,EAAWtC,KAA1B,4BAGTO,GAASmC,EAAAA,EAAAA,IAAWJ,IAEpBJ,GACD,EAQC,WACE,iBAAKzB,UAAWC,EAAhB,8EAEE,mBACA,iEAEF,kBACEC,SAAUqB,EACVf,KAAK,OACLH,MAAOd,EACPkB,YAAY,OACZlB,KAAK,OACLS,UAAWC,KAEb,kBACEC,SAAUqB,EACVf,KAAK,MACLH,MAAOe,EACPX,YAAY,eACZlB,KAAK,SACLS,UAAWC,KAGb,mBAAQD,UAAWC,EAAmBO,KAAK,SAA3C,SACG1B,GAAY,SAAC,KAAD,KAAyB,6CAExC,SAACe,EAAD,MAGL,E,yDCtDD,EAvBqB,SAAC,GAAiB,IAAfqC,EAAc,EAAdA,QAGtB,OAFkBZ,EAAAA,EAAAA,IAAYzC,IAG5B,SAAC,KAAD,KAEA,oBAAQmB,UAAU,eAAekC,QAASA,EAA1C,WACE,iBAAMlC,UAAU,OAAhB,qBAEA,iBAAMA,UAAU,OAAhB,UACE,gBACEc,MAAM,6BACNH,MAAM,KACNC,OAAO,KACPC,QAAQ,YAJV,UAME,iBAAME,EAAE,uJAKjB,ECyBD,MAvCA,YAAoC,IAAZzB,EAAW,EAAXA,QACtB,GAA0B4B,EAAAA,EAAAA,YAA1B,eAAOiB,EAAP,KAAcC,EAAd,KACMtC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,iCACE,UAACsC,EAAA,GAAD,YACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACEC,IAAKlD,EAAQC,KACbkD,IACEnD,EAAQC,KAAR,2CACwCD,EAAQC,KAAK,GADrD,wCAEI,oEAIV,SAACmD,EAAA,EAAD,CAAcC,QAASrD,EAAQC,KAAMqD,UAAWtD,EAAQ8B,UACxD,SAAC,EAAD,CACEc,QAAS,kBArBIW,EAqBevD,EAAQuD,GApB1CT,EAASS,GACT/C,GAASgD,EAAAA,EAAAA,IAAcD,IAChBb,EAAAA,GAAAA,QAAA,gCAHY,IAAAa,CAqBJ,EACTE,SAAUZ,IAAU7C,EAAQuD,SAGhC,SAACG,EAAA,EAAD,CAASC,QAAQ,YAGtB,ECpCKC,EAAe,WACnB,IAAMhE,GAAWoC,EAAAA,EAAAA,IAAYtC,GAE7B,OACE,+BACE,SAACmE,EAAA,EAAD,CACEC,GAAI,CACFzC,MAAO,QAFX,SAMGzB,EAASmE,KAAI,SAAA/D,GACZ,OAAO,SAAC,EAAD,CAA+BA,QAASA,GAArBA,EAAQuD,GACnC,OAIR,EAED,GAAeS,EAAAA,EAAAA,MAAKJ,GCDpB,EAlBqB,WACnB,IAAMpD,GAAWC,EAAAA,EAAAA,MACXwD,GAAQjC,EAAAA,EAAAA,IAAYkC,EAAAA,IAQ1B,OANAC,EAAAA,EAAAA,YAAU,WACJF,GACFzD,GAAS4D,EAAAA,EAAAA,MAEZ,GAAE,CAAC5D,EAAUyD,KAGZ,iCACE,SAACtC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://goit-react-hw-08-phonebook/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","components/ContactForm/ContactForm.jsx","components/DeleteBtn/DeleteBtn.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const isLoadingCreateButton = state =>\n  state.contacts.isLoadingCreateButton;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const filterQ = selectFilter(state); //'abc'\n  const { items } = selectContacts(state);\n\n  let filtered = items;\n  if (filterQ !== '') {\n    const normalizedFilter = filterQ.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n  return filtered;\n};\n\nexport const selectFilteredAndSortedContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    let filtered = contacts.items;\n    if (filter !== '') {\n      const normalizedFilter = filter.toLowerCase();\n      filtered = filtered.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n    return [...filtered].sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"title\":\"ContactForm_title__jZguf\",\"input\":\"ContactForm_input__Bl93P\",\"loginWith\":\"ContactForm_loginWith__lsNlX\",\"buttonLog\":\"ContactForm_buttonLog__aC+7N\",\"icon\":\"ContactForm_icon__wGMYw\",\"buttonConfirm\":\"ContactForm_buttonConfirm__WwAcU\"};","// extracted by mini-css-extract-plugin\nexport default {\"containerInput\":\"ContactFilter_containerInput__BhFFd\",\"input\":\"ContactFilter_input__8mWOi\",\"filterWrap\":\"ContactFilter_filterWrap__fjwbq\"};","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from './ContactFilter.module.css';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const target = event.target.value.trim();\n    dispatch(setFilter(target));\n  };\n\n  return (\n    <div className={css.containerInput}>\n      <input\n        onChange={handleFilterChange}\n        type=\"text\"\n        placeholder=\"Search contact\"\n        name=\"text\"\n        className={css.input}\n      />\n      <svg\n        fill=\"#000000\"\n        width=\"20px\"\n        height=\"20px\"\n        viewBox=\"0 0 1920 1920\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M790.588 1468.235c-373.722 0-677.647-303.924-677.647-677.647 0-373.722 303.925-677.647 677.647-677.647 373.723 0 677.647 303.925 677.647 677.647 0 373.723-303.924 677.647-677.647 677.647Zm596.781-160.715c120.396-138.692 193.807-319.285 193.807-516.932C1581.176 354.748 1226.428 0 790.588 0S0 354.748 0 790.588s354.748 790.588 790.588 790.588c197.647 0 378.24-73.411 516.932-193.807l516.028 516.142 79.963-79.963-516.142-516.028Z\"\n          fillRule=\"evenodd\"\n        ></path>\n      </svg>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  isLoadingCreateButton,\n  selectContacts,\n} from 'redux/contacts/selectors';\n\nimport css from './ContactForm.module.css';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { toast } from 'react-toastify';\nimport { CreateLoaderSpiner } from 'components/LoaderSpiner/LoaderSpiner';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const { items } = useSelector(selectContacts);\n  const isLoading = useSelector(isLoadingCreateButton);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const newContact = {\n      name,\n      number,\n    };\n    const normalizedName = newContact.name.toLowerCase();\n    const contactsIncludes = items.find(\n      contact =>\n        contact.name.toLowerCase() === normalizedName ||\n        contact.number === newContact.number\n    );\n    if (contactsIncludes) {\n      return toast.error(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.title}>\n        Hello 🙋‍♂️, this is a custom notebook,\n        <br />\n        <span>here you can save any contacts</span>\n      </div>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        value={name}\n        placeholder=\"Name\"\n        name=\"name\"\n        className={css.input}\n      />\n      <input\n        onChange={handleChange}\n        type=\"tel\"\n        value={number}\n        placeholder=\"Phone number\"\n        name=\"number\"\n        className={css.input}\n      />\n\n      <button className={css.buttonConfirm} type=\"submit\">\n        {isLoading ? <CreateLoaderSpiner /> : <p>create contact</p>}\n      </button>\n      <ContactFilter />\n    </form>\n  );\n};\n","import React from 'react';\nimport './DeleteButton.css';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { MiniLoaderSpiner } from 'components/LoaderSpiner/LoaderSpiner';\n\nconst DeleteButton = ({ onClick }) => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return isLoading ? (\n    <MiniLoaderSpiner />\n  ) : (\n    <button className=\"deleteButton\" onClick={onClick}>\n      <span className=\"text\">Delete</span>\n\n      <span className=\"icon\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"></path>\n        </svg>\n      </span>\n    </button>\n  );\n};\n\nexport default DeleteButton;\n","import ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { deleteContact } from 'redux/contacts/operations';\nimport DeleteButton from 'components/DeleteBtn/DeleteBtn';\n\nfunction ContactsItem({ contact }) {\n  const [delId, setDelId] = useState();\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    setDelId(id);\n    dispatch(deleteContact(id));\n    return toast.success(`Contact deleted successfully`);\n  };\n\n  return (\n    <>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar\n            alt={contact.name}\n            src={\n              contact.name\n                ? `https://ui-avatars.com/api/?name=${contact.name[0]}&length=1&background=random&size=262`\n                : 'https://ssl.gstatic.com/s2/oz/images/sge/grey_silhouette.png'\n            }\n          ></Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={contact.name} secondary={contact.number} />\n        <DeleteButton\n          onClick={() => handleDelete(contact.id)}\n          disabled={delId === contact.id}\n        ></DeleteButton>\n      </ListItem>\n      <Divider variant=\"inset\" />\n    </>\n  );\n}\nContactsItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactsItem;\n","import * as React from 'react';\nimport List from '@mui/material/List';\n\nimport { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredAndSortedContacts } from 'redux/contacts/selectors';\n\nimport ContactsItem from 'components/ContactsItem/ContactsItem';\n\nconst ContactsList = () => {\n  const filtered = useSelector(selectFilteredAndSortedContacts);\n\n  return (\n    <>\n      <List\n        sx={{\n          width: '100%',\n          // maxWidth: 720,\n        }}\n      >\n        {filtered.map(contact => {\n          return <ContactsItem key={contact.id} contact={contact} />;\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default memo(ContactsList);\n\n// import { memo } from 'react';\n// import { useSelector } from 'react-redux';\n// import StyledList from './ContactsList.styled';\n// import {\n//   // selectError,\n//   // selectIsLoading,\n//   selectFilteredAndSortedContacts,\n// } from 'redux/contacts/selectors';\n// // import { fetchContacts } from 'redux/contacts/operations';\n// import ContactsItem from 'components/ContactsItem/ContactsItem';\n\n// function ContactsList() {\n//   const filtered = useSelector(selectFilteredAndSortedContacts);\n//   // const isLoading = useSelector(selectIsLoading);\n//   // const error = useSelector(selectError);\n//   // const dispatch = useDispatch();\n\n//   // useEffect(() => {\n//   //   dispatch(fetchContacts());\n//   // }, [dispatch]);\n\n//   return (\n//     <>\n//       {/* {isLoading && !error && <h3>Request in progress...</h3>}\n//       {error && <p>{error}</p>} */}\n//       <StyledList>\n//         {filtered.map(contact => {\n//           return <ContactsItem key={contact.id} contact={contact} />;\n//         })}\n//       </StyledList>\n//     </>\n//   );\n// }\n\n// export default memo(ContactsList);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { selectToken } from 'redux/auth/selectors';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n\n  useEffect(() => {\n    if (token) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, token]);\n\n  return (\n    <>\n      <ContactForm />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","isLoadingCreateButton","selectFilteredAndSortedContacts","createSelector","filtered","items","normalizedFilter","toLowerCase","contact","name","includes","sort","a","b","localeCompare","ContactFilter","dispatch","useDispatch","className","css","onChange","event","target","value","trim","setFilter","type","placeholder","fill","width","height","viewBox","xmlns","d","fillRule","ContactForm","useState","setName","number","setNumber","useSelector","handleChange","e","reset","onSubmit","evt","preventDefault","newContact","normalizedName","find","toast","addContact","onClick","delId","setDelId","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","id","deleteContact","disabled","Divider","variant","ContactsList","List","sx","map","memo","token","selectToken","useEffect","fetchContacts"],"sourceRoot":""}